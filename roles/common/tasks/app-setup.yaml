- name: create roboshop user
  ansible.builtin.user:
    name: roboshop

- name: Recursively remove app directory
  ansible.builtin.file:
    path: /app
    state: absent

- name: create app directory
  ansible.builtin.file:
    path: /app
    state: directory

# - name: "download {{component}} application"
#   ansible.builtin.get_url:
#     url: "https://roboshop-artifacts.s3.amazonaws.com/{{component}}-v3.zip"
#     dest: /tmp
#   when: component in ['shipping', 'cart', 'payment', 'catalogue']  # keep double quotes

# - name: "extract {{component}} application"
#   ansible.builtin.unarchive:
#     src: "/tmp/{{component}}-v3.zip"
#     dest: /app
#     remote_src: yes
#   when: component in ['shipping', 'cart', 'payment', 'catalogue'] 

# - name: "download {{component}} application"
#   ansible.builtin.get_url:
#     url: "https://roboshop-artifacts.s3.amazonaws.com/{{component}}.zip"
#     dest: /tmp
#   when: component == "user"  # keep double quotes

# - name: "extract {{component}} application"
#   ansible.builtin.unarchive:
#     src: "/tmp/{{component}}.zip"
#     dest: /app
#     remote_src: yes
#   when: component == "user"



- name: Download artifact from nexus
  ansible.builtin.get_url:
    url: "{{NEXUS_URL}}/{{component}}/{{group_id}}/{{component}}/{{app_version}}/{{component}}-{{app_version}}.zip"
    dest: /tmp
  when: component in ['shipping', 'cart', 'payment', 'catalogue']  # keep double quotes

- name: "extract {{component}} application"
  ansible.builtin.unarchive:
    src: "/tmp/{{component}}-{{app_version}}.zip"
    dest: /app
    remote_src: yes
  when: component in ['shipping', 'cart', 'payment', 'catalogue'] 

- name: Download artifact from nexus
  ansible.builtin.get_url:
    url: "{{NEXUS_URL}}/{{component}}/{{group_id}}/{{component}}/{{app_version}}/{{component}}-{{app_version}}.zip"
    dest: /tmp
  when: component == "user"  # keep double quotes

- name: "extract {{component}} application"
  ansible.builtin.unarchive:
    src: "/tmp/{{component}}-{{app_version}}.zip"
    dest: /app
    remote_src: yes
  when: component == "user"